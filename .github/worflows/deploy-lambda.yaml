name: Deploy Lambdas

on:
  push:
    branches:
      - main
    paths:
      - 'lambdas/go/*'  # Solo activa cuando haya cambios en el c칩digo de las lambdas
  workflow_dispatch:
    inputs:
      lambda_path:
        description: 'Ruta de la Lambda a construir'
        required: true
        default: 'lambdas/go/lambda1'  # Ruta predeterminada para la Lambda
      go_version:
        description: 'Versi칩n de Go a usar'
        required: true
        default: '1.24'  # Versi칩n predeterminada de Go

jobs:
  deploy_lambda:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ github.event.inputs.go_version }}

      - name: Validate Lambda name
        run: |
          lambda_path="${{ github.event.inputs.lambda_path }}"
          if [[ ! "$lambda_path" =~ -aws-lambda$ ]]; then
            echo "Error: La ruta de la Lambda debe terminar con '-aws-lambda'. Ruta proporcionada: $lambda_path"
            exit 1
          fi
          echo "Ruta de Lambda v치lida: $lambda_path"

      - name: Build Lambda function
        run: |
          cd ${{ github.event.inputs.lambda_path }}
          GOOS=linux GOARCH=amd64 go build -o main .

      - name: Zip Lambda package
        run: |
          cd ${{ github.event.inputs.lambda_path }}
          zip function.zip main

      - name: Deploy Lambda to AWS
        run: |
          cd ${{ github.event.inputs.lambda_path }}
          terraform init
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
